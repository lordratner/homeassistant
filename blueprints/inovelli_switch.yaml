blueprint:
  name: Inovelli Switch Automation (Zigbee2MQTT)
  description: Provide on/off and dimming control for a smart light/bulb. You will need the MQTT topic for the switch as well as the script used for the dimming logic. 
  domain: automation
  source_url: https://github.com/lordratner/homeassistant/blob/main/blueprints/inovelli_switch.yaml
  input:
    mqtt_topic:
      name: Switch MQTT Topic
      description: "The full MQTT topic where switch actions are published. Uses the Friendly Name in Zigbee2MQTT for the device"
      selector:
        text:
      default: "zigbee2mqtt/SWITCH TOPIC HERE/action" # Optional: provide a default value
    light_entity:
      name: Light Entity
      description: "Select the light entity that will be controlled by the switch. Note: This does not create a Zigbee binding."
      selector:
        entity:
          domain: light
    dimming_script:
      name: Dimming Script
      description: "The script use to control dimming the light. Called when the paddle is held up (brighter) or down (dimmer)."
      selector:
        entity:
          domain: script
    adaptive_lighting_entity:
      name: Adaptive Lighting Profile
      description: "Select the Adaptive Lighting profile for the light entity, if applicable. Make sure not to select the Brightness, Color Temp, or Sleep Mode switches."
      selector:
        entity:
          domain: switch
          integration: adaptive_lighting
triggers:
  - trigger: mqtt
    topic: !input mqtt_topic
conditions:
  - condition: template
    value_template: "{{ trigger.payload is not none and trigger.payload | length > 0 }}"
    enabled: true
actions:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'up_single' }}"
        sequence:
          - action: light.turn_on
            data: {}
            target:
              entity_id: !input light_entity
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'down_single' }}"
        sequence:
          - action: light.turn_off
            data:
              transition: 2
            target:
              entity_id: !input light_entity
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'up_held' }}"
        sequence:
          - target:
              entity_id: !input dimming_script
            data:
              variables:
                light_entity: !input light_entity
                direction: up
            action: script.turn_on
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'down_held' }}"
        sequence:
          - target:
              entity_id: !input dimming_script
            data:
              variables:
                light_entity: !input light_entity
                direction: down
            action: script.turn_on
      - conditions:
          - condition: template
            value_template: >-
              {{ trigger.payload == 'up_release' or trigger.payload ==
              'down_release' }}
        sequence:
          - target:
              entity_id: !input dimming_script
            action: script.turn_off
            data: {}
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'up_double' }}"
        sequence:
          - action: light.turn_on
            data: 
              brightness_pct: 100
            target:
              entity_id: !input light_entity
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'down_double' }}"
        sequence:
          - action: light.turn_on
            data: 
              brightness_pct: 20
            target:
              entity_id: !input light_entity
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'up_triple' }}"
        sequence:
          - action: script.turn_on
            data:
              variables:
                light: !input light_entity
                mode: on
            target:
              entity_id: script.night_light_controller
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'down_triple' }}"
        sequence:
          - action: script.turn_on
            data:
              variables:
                light: !input light_entity
                mode: off
            target:
              entity_id: script.night_light_controller
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'up_quadruple' }}"
        sequence:
          - action: light.turn_on
            data: 
              color_temp_kelvin: 10000
              transition: 2
            target:
              entity_id: !input light_entity
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'down_quadruple' }}"
        sequence:
          - action: light.turn_on
            data: 
              color_temp_kelvin: 1000
              transition: 2
            target:
              entity_id: !input light_entity
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'config_single' }}"
        sequence:
          - action: adaptive_lighting.apply
            data:
              entity_id: !input adaptive_lighting_entity
mode: queued
max: 10
